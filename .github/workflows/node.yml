# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  cypress-run:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cypress run
        uses: cypress-io/github-action@v2
        with:
          start: docker run -p 8080:8080 -p 8081:8081 -p 8082:8082 -d --name xc-instant --env nocodb/nocodb:latest ; sleep 10
          wait-on: 'http://localhost:8080/dashboard'
  docker:

    runs-on: ubuntu-latest


    steps:
    - uses: actions/checkout@v2

    - name: Test Mysql REST APIs
      run: cd ./packages/nocodb/  && docker-compose run xc-test-mysql
    - name: Test Mysql GraphQL APIs
      run: cd ./packages/nocodb/  && docker-compose run xc-test-gql-mysql

#    - name: Test MSSQL REST APIs
#      run: cd ./packages/nocodb/  && docker-compose run xc-test-mssql
#    - name: Test MSSQL GraphQL APIs
#      run: cd ./packages/nocodb/  && docker-compose run xc-test-gql-mssql
#
#    - name: Test PostgreSQL REST APIs
#      run: cd ./packages/nocodb/  && docker-compose run xc-test-pg
#    - name: Test PostgreSQL GraphQL APIs
#      run: cd ./packages/nocodb/  && docker-compose run xc-test-gql-pg
#
#    - name: Test SQLite3 REST APIs
#      run: cd ./packages/nocodb/  && docker-compose run xc-test-sqlite
#    - name: Test SQLite3 GraphQL APIs
#      run: cd ./packages/nocodb/  && docker-compose run xc-test-gql-sqlite
